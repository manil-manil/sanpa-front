# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: 산파 프론트 자동배포

on:
    push:
        branches: [develop]
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: borales/actions-yarn@v3.0.0
              with:
                  cmd: install
            - uses: borales/actions-yarn@v3.0.0
              with:
                  cmd: build
            - name: copy file via ssh password
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.SERVER_HOST }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SERVER_SSH_KEY }}
                  port: ${{ secrets.SERVER_PORT }}
                  source: "*"
                  target: "~/sanpa-front"
            - name: Deploy FastApi MainServer(master)
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SERVER_HOST }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SERVER_SSH_KEY }}
                  port: ${{ secrets.SERVER_PORT }}
                  script: |
                      cd ~/sanpa-front
                      docker build -t sanpa-front-image .
                      docker stop sanpa-front
                      docker rm sanpa-front --force
                      docker run -d -p 3000:3000 --name sanpa-front sanpa-front-image
                      docker image prune -f
            - name: Get Current Time
              uses: 1466587594/get-current-time@v2
              id: current-time
              with:
                  format: YYYY-MM-DDTHH:mm:ss
                  utcOffset: "+09:00"

            - name: Print Current Time
              run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}"
              shell: bash
            - name: Notification For slack with web hook
              run: |
                  curl -X POST https://hooks.slack.com/services/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 \
                  -H 'Content-Type: application/json' \
                  -d '{"text": "개발 프론트 배포됐어요 ! 개발 프론트 배포됐어요 !"}'
